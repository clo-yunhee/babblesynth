name: Build, deploy, and draft release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  ubuntu-18_04-build:
    name: Build (Ubuntu 18.04)
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Cache compilation (ccache)
      uses: hendrikmuhs/ccache-action@v1
     
    # The project needs Qt 5.15.2
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.2
        modules: qtcharts
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ubuntu-18_04-exe
        path: ${{github.workspace}}/build

  ubuntu-18_04-appimage:
    name: AppImage (Ubuntu 18.04)
    runs-on: ubuntu-18.04

    needs: ubuntu-18_04-build

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    # The project needs Qt 5.15.2
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.2
        modules: qtcharts
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-18_04-exe
        path: ${{github.workspace}}/build

    - name: Download tools
      run: |
        wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
        chmod +x linuxdeployqt-continuous-x86_64.AppImage
        wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
        chmod +x pyuploadtool-x86_64.AppImage

    - name: Install packaging dependencies
      run: sudo apt-get install -y zsync libgstreamer-plugins-base1.0-0

    - name: Create AppDir
      run: |
        mkdir -p /tmp/AppDir/usr/bin
        mkdir -p /tmp/AppDir/usr/lib
        mkdir -p /tmp/AppDir/usr/share/applications
        mkdir -p /tmp/AppDir/usr/share/icons/hicolor/512x512/apps
        cp ${{github.workspace}}/build/src/gui/babblesynth-gui /tmp/AppDir/usr/bin/babblesynth
        chmod +x /tmp/AppDir/usr/bin/babblesynth
        cp ${{github.workspace}}/babblesynth.desktop /tmp/AppDir/usr/share/applications/babblesynth.desktop
        cp ${{github.workspace}}/branding/icon_512x512.png /tmp/AppDir/usr/share/icons/hicolor/512x512/apps/babblesynth.png
        tree /tmp/AppDir

    - name:
      id: get_version
      run: |
        if [[ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]]; then
          echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
        else
          echo ::set-output name=version::continuous
        fi

    - name: Build AppImage with linuxdeployqt
      run: |
        export VERSION=${{ steps.get_version.outputs.version }}
        export UPDATE_INFO="gh-releases-zsync|clo-yunhee|babblesynth|BabbleSynth ${{ steps.get_version.outputs.version }}|BabbleSynth-*x86_64.AppImage.zsync"
        ./linuxdeployqt-continuous-x86_64.AppImage /tmp/AppDir/usr/share/applications/babblesynth.desktop -appimage -updateinformation="$UPDATE_INFO"
        ls -alF ${{github.workspace}}

    - name: Create release and upload artifacts
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./pyuploadtool-x86_64.AppImage ${{github.workspace}}/BabbleSynth-${{ steps.get_version.outputs.version }}-x86_64.AppImage ${{github.workspace}}/BabbleSynth-${{ steps.get_version.outputs.version }}-x86_64.AppImage.zsync
      