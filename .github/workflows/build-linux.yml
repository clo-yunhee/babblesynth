name: Build for Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    
    # The project needs Qt 5.15.2
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.2
        modules: qtcharts
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/usr

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  appimage:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download linuxdeployqt
      run: |
        wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage -O /usr/local/bin/linuxdeployqt
        chmod +x /usr/local/bin/linuxdeployqt

    - name: Create AppDir
      run: |
        mkdir -p /tmp/AppDir/usr/bin
        mkdir -p /tmp/AppDir/usr/lib
        mkdir -p /tmp/AppDir/usr/share/applications
        mkdir -p /tmp/AppDir/usr/share/icons/hicolor/512x512/apps
        cp ${{github.workspace}}/build/src/gui/babblesynth-gui /tmp/AppDir/usr/bin/babblesynth
        cp ${{github.workspace}}/babblesynth.dektop /tmp/AppDir/usr/share/applications/babblesynth.desktop
        cp ${{github.workspace}}/branding/icon_512x512.png /tmp/AppDir/usr/share/icons/hicolor/512x512/apps/babblesynth.png

    - name: Run linuxdeployqt
      run: |
        linuxdeployqt /tmp/AppDir/usr/share/applications/babblesynth.desktop

